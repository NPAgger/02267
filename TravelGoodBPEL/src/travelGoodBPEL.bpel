<?xml version="1.0" encoding="UTF-8" ?>
<process
    name="travelGoodBPEL"
    targetNamespace="http://enterprise.netbeans.org/bpel/TravelGoodBPEL/travelGoodBPEL"
    xmlns:tns="http://enterprise.netbeans.org/bpel/TravelGoodBPEL/travelGoodBPEL"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor2"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" xmlns:ns1="http://travelgood.ws" xmlns:ns2="http://lameducktypes" xmlns:ns3="http://lameduck.ws" xmlns:sxxf="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/XPathFunctions" xmlns:ns4="http://niceviewtypes">
   <import namespace="http://enterprise.netbeans.org/bpel/lameduckServiceWrapper" location="lameduckServiceWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
   <import namespace="http://lameduck.ws" location="http://localhost:8080/LameDuck/lameduckService?wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
   <import namespace="http://travelgood.ws" location="TravelGood.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
   <import namespace="http://lameducktypes" location="http://localhost:8080/LameDuck/lameduckService?xsd=1" importType="http://www.w3.org/2001/XMLSchema"/>
   <import namespace="http://enterprise.netbeans.org/bpel/niceviewServiceWrapper" location="niceviewServiceWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
   <import namespace="http://niceview.ws" location="http://localhost:8080/NiceView/NiceViewService?wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
   <partnerLinks>
       <partnerLink name="LameDuckPartnerLink" xmlns:tns="http://enterprise.netbeans.org/bpel/lameduckServiceWrapper" partnerLinkType="tns:lameduckLinkType" partnerRole="lameduckRole"/>
      <partnerLink name="NiceViewPartnerLink" xmlns:tns="http://enterprise.netbeans.org/bpel/niceviewServiceWrapper" partnerLinkType="tns:NiceViewWSDLLinkType" partnerRole="NiceViewWSDLRole"/>
      <partnerLink name="PartnerLink1" xmlns:tns="http://travelgood.ws" partnerLinkType="tns:TravelGood" myRole="TravelGoodPortTypeRole"/>
   </partnerLinks>
   <variables>
      <variable name="GetCancelledItineraryIn" messageType="ns1:GetCancelledItineraryRequest"/>
      <variable name="GetBookedItineraryIn" messageType="ns1:GetBookedItineraryRequest"/>
      <variable name="GetCancelledItineraryOut" messageType="ns1:GetCancelledItineraryResponse"/>
      <variable name="ItineraryCancelled" type="xs:boolean"/>
      <variable name="NewDateEarlier" type="xs:boolean"/>
      <variable name="EarliestDate" type="xs:dateTime"/>
      <variable name="CancelBookedItineraryOut" messageType="ns1:CancelBookedItineraryResponse"/>
      <variable name="CancelMessage" type="xs:string"/>
      <variable name="CancelBookedItineraryIn" messageType="ns1:CancelBookedItineraryRequest"/>
      <variable name="GetBookedItineraryOut" messageType="ns1:GetBookedItineraryResponse"/>
      <variable name="CancelItineraryOut" messageType="ns1:CancelItineraryResponse"/>
      <variable name="CancelItineraryIn" messageType="ns1:CancelItineraryRequest"/>
      <variable name="hotelBookingArray" element="ns1:HotelBookingArray">
         <sxed:editor>
            <sxed:predicate path="$hotelBookingArray/ns1:HotelBooking[$numberOfHotels + 1]" source="to"/>
            <sxed:predicate path="$hotelBookingArray/ns1:HotelBooking[$BookEachHotelCounter]" source="from"/>
            <sxed:predicate path="$hotelBookingArray/ns1:HotelBooking[$BookEachHotelCounter]" source="to"/>
            <sxed:predicate path="$hotelBookingArray/ns1:HotelBooking[$CancelEachHotelCounter]" source="from"/>
            <sxed:predicate path="$hotelBookingArray/ns1:HotelBooking[$CancelEachHotelCounter]" source="to"/>
         </sxed:editor>
      </variable>
      <variable name="numberOfHotels" type="xs:int"/>
      <variable name="AddHotelOut" messageType="ns1:AddHotelResponse"/>
      <variable name="AddHotelIn" messageType="ns1:AddHotelRequest"/>
      <variable name="NiceViewGetHotelsOut" xmlns:tns="http://niceview.ws" messageType="tns:getHotelsResponse"/>
      <variable name="NiceViewGetHotelsIn" xmlns:tns="http://niceview.ws" messageType="tns:getHotelsRequest"/>
      <variable name="GetHotelsIn" messageType="ns1:GetHotelsRequest"/>
      <variable name="GetHotelsOut" messageType="ns1:GetHotelsResponse"/>
      <variable name="BookFlightFault" messageType="ns3:bookFlightFault"/>
      <variable name="GetItineraryOut" messageType="ns1:GetItineraryResponse"/>
      <variable name="GetItineraryIn" messageType="ns1:GetItineraryRequest"/>
      <variable name="numberOfFlights" type="xs:int"/>
      <variable name="AddFlightOut" messageType="ns1:AddFlightResponse"/>
      <variable name="AddFlightIn" messageType="ns1:AddFlightRequest"/>
      <variable name="flightBookingArray" element="ns1:flightBookingArray">
         <sxed:editor>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]" source="to"/>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$BookEachFlightCounter]" source="to"/>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$BookEachFlightCounter]" source="from"/>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$numberOfFlights]" source="from"/>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$BookingCounter]" source="from"/>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$CancelEachFlightCounter]" source="from"/>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$CancelEachFlightCounter]" source="to"/>
         </sxed:editor>
      </variable>
      <variable name="Fault1FaultVar" messageType="ns1:BookItineraryFault"/>
      <variable name="BookItineraryOut" xmlns:tns="http://travelgood.ws" messageType="tns:BookItineraryResponse"/>
      <variable name="BookItineraryIn" xmlns:tns="http://travelgood.ws" messageType="tns:BookItineraryRequest"/>
      <variable name="GetFlightsOut" xmlns:tns="http://travelgood.ws" messageType="tns:GetFlightsResponse"/>
      <variable name="GetFlightsIn" xmlns:tns="http://travelgood.ws" messageType="tns:GetFlightsRequest"/>
      <variable name="CreateItineraryOut" xmlns:tns="http://travelgood.ws" messageType="tns:CreateItineraryResponse"/>
      <variable name="CreateItineraryIn" xmlns:tns="http://travelgood.ws" messageType="tns:CreateItineraryRequest"/>
      <variable name="LameDuckGetFlightsOut" xmlns:tns="http://lameduck.ws" messageType="tns:getFlightResponse"/>
      <variable name="LameDuckGetFlightsIn" xmlns:tns="http://lameduck.ws" messageType="tns:getFlightRequest"/>
      <variable name="PlanningDone" type="xs:boolean"/>
   </variables>
    <correlationSets>
        <correlationSet name="ItineraryCorrelationSet" properties="ns1:ItineraryId"/>
    </correlationSets>
    <sequence>
      <receive name="ReceiveCreateItinerary" createInstance="yes" partnerLink="PartnerLink1" operation="CreateItinerary" xmlns:tns="http://travelgood.ws" portType="tns:TravelGoodPortType" variable="CreateItineraryIn"></receive>
      <assign name="Creating">
         <copy>
            <from>false()</from>
            <to variable="PlanningDone"/>
         </copy>
         <copy>
            <from>0</from>
            <to variable="numberOfFlights"/>
         </copy>
         <copy>
            <from>sxxf:getGUID()</from>
            <to variable="CreateItineraryOut" part="CreateItineraryResponse"/>
         </copy>
         <copy>
            <from>0</from>
            <to variable="numberOfHotels"/>
         </copy>
         <copy>
            <from>'9999-11-26T11:17:50.05+01:00'</from>
            <to variable="EarliestDate"/>
         </copy>
         <copy>
            <from>false()</from>
            <to variable="ItineraryCancelled"/>
         </copy>
      </assign>
      <reply name="ReplyCreateItinerary" partnerLink="PartnerLink1" operation="CreateItinerary" xmlns:tns="http://travelgood.ws" portType="tns:TravelGoodPortType" variable="CreateItineraryOut">
         <correlations>
            <correlation set="ItineraryCorrelationSet" initiate="yes"/>
         </correlations>
      </reply>
      <while name="Planning">
         <condition>not($PlanningDone)</condition>
         <pick name="PlanningPick">
            <onMessage partnerLink="PartnerLink1" operation="GetFlights" portType="tns:TravelGoodPortType" variable="GetFlightsIn" xmlns:tns="http://travelgood.ws">
               <correlations>
                  <correlation set="ItineraryCorrelationSet" initiate="no"/>
               </correlations>
               <sequence name="GettingFlights">
                  <assign name="TGtoLD">
                     <copy>
                        <from>$GetFlightsIn.GetFlightsRequest/ns2:request</from>
                        <to variable="LameDuckGetFlightsIn" part="input"/>
                     </copy>
                  </assign>
                  <invoke name="LameDuckGetFlights" partnerLink="LameDuckPartnerLink" operation="getFlights" xmlns:tns="http://lameduck.ws" portType="tns:lameduckPortType" inputVariable="LameDuckGetFlightsIn" outputVariable="LameDuckGetFlightsOut"/>
                  <assign name="LDtoTG">
                     <copy>
                        <from variable="LameDuckGetFlightsOut" part="output"/>
                        <to variable="GetFlightsOut" part="GetFlightsResponse"/>
                     </copy>
                  </assign>
                  <reply name="ReplyGetFlights" partnerLink="PartnerLink1" operation="GetFlights" portType="tns:TravelGoodPortType" variable="GetFlightsOut"/>
               </sequence>
            </onMessage>
            <onMessage partnerLink="PartnerLink1" operation="BookItinerary" portType="tns:TravelGoodPortType" variable="BookItineraryIn" xmlns:tns="http://travelgood.ws">
                <correlations>
                    <correlation set="ItineraryCorrelationSet" initiate="no"/>
                </correlations>
                <sequence name="BookingItinerary">
                   <scope name="Scope3">
                               <variables>
                                     <variable name="BookItineraryFault" messageType="ns1:BookItineraryFault"/>
                                  </variables>
				   <faultHandlers>
				      <catchAll>
				         <sequence name="Sequence11">
				            <compensate name="Compensate1"/>
				            <assign name="Assign6">
				               <copy>
				                     <from variable="flightBookingArray"/>
				                        <to>$BookItineraryFault.BookItineraryFault/tns:flightBookingArray</to>
				                  </copy>
				                  <copy>
				                     <from variable="hotelBookingArray"/>
				                        <to>$BookItineraryFault.BookItineraryFault/tns:HotelBookingArray</to>
				                  </copy>
				               <copy>
				                  <from>'Could not book itinerary. All booked flights and hotels cancelled.'</from>
				                  <to>$BookItineraryFault.BookItineraryFault/tns:Message</to>
				               </copy>
				            </assign>
				            <reply name="BookItineraryFaultReply" partnerLink="PartnerLink1" operation="BookItinerary" portType="tns:TravelGoodPortType" faultName="tns:fault1" variable="BookItineraryFault"/>
				         </sequence>
				      </catchAll>
				   </faultHandlers>
                      <sequence name="Sequence8">
                         <forEach name="BookEachFlight" parallel="no" counterName="BookEachFlightCounter">
                            <startCounterValue>1</startCounterValue>
                               <finalCounterValue>$numberOfFlights</finalCounterValue>
                               <scope name="Scope1">
                               <variables>
                                     <!--<variable name="BookItineraryFault" messageType="ns1:BookItineraryFault"/>-->
                                        <variable name="LameDuckBookFlightOut" messageType="ns3:bookFlightResponse"/>
                                        <variable name="LameDuckBookFlightIn" messageType="ns3:bookFlightRequest"/>
                                  </variables>
                                  
                                  <scope name="Scope2">
                                     <variables>
                                           <variable name="LameDuckCancelFlightOut" messageType="ns3:cancelFlightResponse"/>
                                              <variable name="LameDuckCancelFlightIn" messageType="ns3:cancelFlightRequest"/>
                                        </variables>
                                        <compensationHandler>
                                           <sequence name="Sequence4">
                                                 <assign name="Assign5">
                                                       <copy>
                                                             <from>$flightBookingArray/tns:FlightBooking[$BookEachFlightCounter]/bookingNumber
                                           <sxed:editor>
                                                                         <sxed:predicate path="$flightBookingArray/tns:FlightBooking[$BookEachFlightCounter]" source="from"/>
                                                                      </sxed:editor>
                                                                </from>
                                                                <to>$LameDuckCancelFlightIn.input/bookingNumber</to>
                                                          </copy>
                                                          <copy>
                                                             <from>$flightBookingArray/tns:FlightBooking[$BookEachFlightCounter]/tns:Price
                                           <sxed:editor>
                                                                         <sxed:predicate path="$flightBookingArray/tns:FlightBooking[$BookEachFlightCounter]" source="from"/>
                                                                      </sxed:editor>
                                                                </from>
                                                                <to>$LameDuckCancelFlightIn.input/price</to>
                                                          </copy>
                                                          <copy>
                                                             <from>$BookItineraryIn.BookItineraryRequest/tns:CreditCardInfo</from>
                                                                <to>$LameDuckCancelFlightIn.input/creditCardInfo</to>
                                                          </copy>
                                                          <copy>
                                                             <from>'Cancelled'</from>
                                                                <to>$flightBookingArray/tns:FlightBooking[$BookEachFlightCounter]/bookingStatus
                                           <sxed:editor>
                                                                         <sxed:predicate path="$flightBookingArray/tns:FlightBooking[$BookEachFlightCounter]" source="to"/>
                                                                      </sxed:editor>
                                                                </to>
                                                          </copy>
                                                    </assign>
                                                    <invoke name="Invoke1" partnerLink="LameDuckPartnerLink" operation="cancelFlight" portType="ns3:lameduckPortType" inputVariable="LameDuckCancelFlightIn" outputVariable="LameDuckCancelFlightOut"/>
                                              </sequence>
                                        </compensationHandler>
                                        <sequence name="Sequence3">
                                           <assign name="Assign7">
                                                 <copy>
                                                       <from>$BookItineraryIn.BookItineraryRequest/tns:CreditCardInfo</from>
                                                          <to>$LameDuckBookFlightIn.input/creditCardInfo</to>
                                                    </copy>
                                                    <copy>
                                                       <from>$flightBookingArray/tns:FlightBooking[$BookEachFlightCounter]/bookingNumber
                                                                <sxed:editor>
                                                                   <sxed:predicate path="$flightBookingArray/tns:FlightBooking[$BookEachFlightCounter]" source="from"/>
                                                                </sxed:editor>
                                                          </from>
                                                          <to>$LameDuckBookFlightIn.input/bookingNumber</to>
                                                    </copy>
                                              </assign>
                                              <invoke name="LameDuckBookFlight" partnerLink="LameDuckPartnerLink" operation="bookFlight" portType="ns3:lameduckPortType" inputVariable="LameDuckBookFlightIn" outputVariable="LameDuckBookFlightOut"/>
                                              <assign name="Assign4">
                                                 <copy>
                                                       <from>'Confirmed'</from>
                                                          <to>$flightBookingArray/tns:FlightBooking[$BookEachFlightCounter]/bookingStatus
                                                    <sxed:editor>
                                                                   <sxed:predicate path="$flightBookingArray/tns:FlightBooking[$BookEachFlightCounter]" source="to"/>
                                                                </sxed:editor>
                                                          </to>
                                                    </copy>
                                              </assign>
                                        </sequence>
                                  </scope>
                            </scope>
                         </forEach>
                         <forEach name="BookEachHotel" parallel="no" counterName="BookEachHotelCounter">
                            <startCounterValue>1</startCounterValue>
                            <finalCounterValue>$numberOfHotels</finalCounterValue>
                            <scope name="Scope4">
                               <variables>
                                  <variable name="NiceViewCancelHotelOut" xmlns:tns="http://niceview.ws" messageType="tns:cancelHotelResponse"/>
                                  <variable name="NiceViewCancelHotelIn" xmlns:tns="http://niceview.ws" messageType="tns:cancelHotelRequest"/>
                                  <variable name="NiceViewBookHotelOut" xmlns:tns="http://niceview.ws" messageType="tns:bookHotelResponse"/>
                                  <variable name="NiceViewBookHotelIn" xmlns:tns="http://niceview.ws" messageType="tns:bookHotelRequest"/>
                               </variables>
                               <compensationHandler>
                                  <sequence name="Sequence10">
                                     <assign name="Assign13">
                                        <copy>
                                           <from>$hotelBookingArray/tns:HotelBooking[$BookEachHotelCounter]/bookingNumber
                                              <sxed:editor>
                                                 <sxed:predicate path="$hotelBookingArray/tns:HotelBooking[$BookEachHotelCounter]" source="from"/>
                                              </sxed:editor>
                                           </from>
                                           <to>$NiceViewCancelHotelIn.input/book_num</to>
                                        </copy>
                                        <copy>
                                           <from>'Cancelled'</from>
                                           <to>$hotelBookingArray/tns:HotelBooking[$BookEachHotelCounter]/bookingStatus
                                              <sxed:editor>
                                                 <sxed:predicate path="$hotelBookingArray/tns:HotelBooking[$BookEachHotelCounter]" source="to"/>
                                              </sxed:editor>
                                           </to>
                                        </copy>
                                     </assign>
                                     <invoke name="NiceViewCancelHotel" partnerLink="NiceViewPartnerLink" operation="cancelHotel" xmlns:tns="http://niceview.ws" portType="tns:NiceViewWSDLPortType" inputVariable="NiceViewCancelHotelIn" outputVariable="NiceViewCancelHotelOut"/>
                                  </sequence>
                               </compensationHandler>
                               <sequence name="Sequence9">
                                  <assign name="Assign11">
                                     <copy>
                                        <from>$hotelBookingArray/tns:HotelBooking[$BookEachHotelCounter]/bookingNumber
                                           <sxed:editor>
                                              <sxed:predicate path="$hotelBookingArray/tns:HotelBooking[$BookEachHotelCounter]" source="from"/>
                                           </sxed:editor>
                                        </from>
                                        <to>$NiceViewBookHotelIn.input/book_num</to>
                                     </copy>
                                     <copy>
                                        <from>$BookItineraryIn.BookItineraryRequest/tns:CreditCardInfo</from>
                                        <to>$NiceViewBookHotelIn.input/creditCardInfo</to>
                                     </copy>
                                  </assign>
                                  <invoke name="NiceViewBookHotel" partnerLink="NiceViewPartnerLink" operation="bookHotel" xmlns:tns="http://niceview.ws" portType="tns:NiceViewWSDLPortType" inputVariable="NiceViewBookHotelIn" outputVariable="NiceViewBookHotelOut"/>
                                  <assign name="Assign12">
                                     <copy>
                                        <from>'Confirmed'</from>
                                        <to>$hotelBookingArray/tns:HotelBooking[$BookEachHotelCounter]/bookingStatus
                                           <sxed:editor>
                                              <sxed:predicate path="$hotelBookingArray/tns:HotelBooking[$BookEachHotelCounter]" source="to"/>
                                           </sxed:editor>
                                        </to>
                                     </copy>
                                  </assign>
                               </sequence>
                            </scope>
                         </forEach>
                      </sequence>
                   </scope>
                   <assign name="Assign1">
                     <copy>
                           <from>true()</from>
                              <to variable="PlanningDone"/>
                        </copy>
                     <copy>
                        <from>true()</from>
                        <to variable="BookItineraryOut" part="BookItineraryResponse"/>
                     </copy>
                  </assign>
                  <reply name="ReplyBookItinerary" partnerLink="PartnerLink1" operation="BookItinerary" portType="tns:TravelGoodPortType" variable="BookItineraryOut"/>
               </sequence>
            </onMessage>
            <onMessage partnerLink="PartnerLink1" operation="AddFlight" portType="ns1:TravelGoodPortType" variable="AddFlightIn">
               <correlations>
                  <correlation set="ItineraryCorrelationSet" initiate="no"/>
               </correlations>
               <sequence name="Sequence1">
                  <assign name="Assign2">
                     <copy>
                        <from>$AddFlightIn.AddFlightRequest/ns1:BookingNumber</from>
                        <to>$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]/bookingNumber
                           <sxed:editor>
                              <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]" source="to"/>
                           </sxed:editor>
                        </to>
                     </copy>
                     <copy>
                        <from>'Unconfirmed'</from>
                        <to>$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]/bookingStatus
                           <sxed:editor>
                              <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]" source="to"/>
                           </sxed:editor>
                        </to>
                     </copy>
                     <copy>
                        <from>true()</from>
                        <to variable="AddFlightOut" part="AddFlightResponse"/>
                     </copy>
                     <copy>
                        <from>$AddFlightIn.AddFlightRequest/ns1:Price</from>
                        <to>$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]/ns1:Price
                           <sxed:editor>
                              <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]" source="to"/>
                           </sxed:editor>
                        </to>
                     </copy>
                     <copy>
                        <from>sxxf:dateTime-less-than($AddFlightIn.AddFlightRequest/ns2:date, $EarliestDate)</from>
                        <to variable="NewDateEarlier"/>
                     </copy>
                  </assign>
                  <if name="IfNewFlightEarlier">
                     <condition>$NewDateEarlier</condition>
                     <assign name="Assign24">
                        <copy>
                           <from>$AddFlightIn.AddFlightRequest/ns2:date</from>
                           <to variable="EarliestDate"/>
                        </copy>
                     </assign>
                  </if>
                  <assign name="Assign8">
                     <copy>
                        <from>$numberOfFlights + 1</from>
                        <to variable="numberOfFlights"/>
                     </copy>
                  </assign>
                  <reply name="ReplyAddFlight" partnerLink="PartnerLink1" operation="AddFlight" portType="ns1:TravelGoodPortType" variable="AddFlightOut"/>
               </sequence>
            </onMessage>
            <onMessage partnerLink="PartnerLink1" operation="GetItinerary" portType="ns1:TravelGoodPortType" variable="GetItineraryIn">
               <correlations>
                  <correlation set="ItineraryCorrelationSet" initiate="no"/>
               </correlations>
               <sequence name="Sequence2">
                  <assign name="Assign3">
                     <copy>
                        <from variable="flightBookingArray"/>
                        <to>$GetItineraryOut.GetItineraryResponse/ns1:flightBookingArray</to>
                     </copy>
                     <copy>
                        <from variable="hotelBookingArray"/>
                        <to>$GetItineraryOut.GetItineraryResponse/ns1:HotelBookingArray</to>
                     </copy>
                  </assign>
                  <reply name="Reply2" partnerLink="PartnerLink1" operation="GetItinerary" portType="ns1:TravelGoodPortType" variable="GetItineraryOut"/>
               </sequence>
            </onMessage>
            <onMessage partnerLink="PartnerLink1" operation="GetHotels" portType="ns1:TravelGoodPortType" variable="GetHotelsIn">
               <correlations>
                  <correlation set="ItineraryCorrelationSet" initiate="no"/>
               </correlations>
               <sequence name="Sequence6">
                  <assign name="TGtoNV">
                     <copy>
                        <from>$GetHotelsIn.GetHotelsRequest/ns4:getRequest</from>
                        <to variable="NiceViewGetHotelsIn" part="input"/>
                     </copy>
                  </assign>
                  <invoke name="NiceViewGetHotels" partnerLink="NiceViewPartnerLink" operation="getHotels" xmlns:tns="http://niceview.ws" portType="tns:NiceViewWSDLPortType" inputVariable="NiceViewGetHotelsIn" outputVariable="NiceViewGetHotelsOut"/>
                  <assign name="NVtoTG">
                     <copy>
                        <from variable="NiceViewGetHotelsOut" part="output"/>
                        <to variable="GetHotelsOut" part="GetHotelsResponse"/>
                     </copy>
                  </assign>
                  <reply name="ReplyGetHotels" partnerLink="PartnerLink1" operation="GetHotels" portType="ns1:TravelGoodPortType" variable="GetHotelsOut"/>
               </sequence>
            </onMessage>
            <onMessage partnerLink="PartnerLink1" operation="AddHotel" portType="ns1:TravelGoodPortType" variable="AddHotelIn">
               <correlations>
                  <correlation set="ItineraryCorrelationSet" initiate="no"/>
               </correlations>
               <sequence name="Sequence7">
                  <assign name="Assign9">
                     <copy>
                        <from>$AddHotelIn.AddHotelRequest/ns1:BookingNumber</from>
                        <to>$hotelBookingArray/ns1:HotelBooking[$numberOfHotels + 1]/bookingNumber
                           <sxed:editor>
                              <sxed:predicate path="$hotelBookingArray/ns1:HotelBooking[$numberOfHotels + 1]" source="to"/>
                           </sxed:editor>
                        </to>
                     </copy>
                     <copy>
                        <from>'Unconfirmed'</from>
                        <to>$hotelBookingArray/ns1:HotelBooking[$numberOfHotels + 1]/bookingStatus
                           <sxed:editor>
                              <sxed:predicate path="$hotelBookingArray/ns1:HotelBooking[$numberOfHotels + 1]" source="to"/>
                           </sxed:editor>
                        </to>
                     </copy>
                     <copy>
                        <from>sxxf:dateTime-less-than($AddHotelIn.AddHotelRequest/ns2:date, $EarliestDate)</from>
                        <to variable="NewDateEarlier"/>
                     </copy>
                  </assign>
                  <if name="If1">
                     <condition>$NewDateEarlier</condition>
                     <assign name="Assign25">
                        <copy>
                           <from>$AddHotelIn.AddHotelRequest/ns2:date</from>
                           <to variable="EarliestDate"/>
                        </copy>
                     </assign>
                  </if>
                  <assign name="Assign10">
                     <copy>
                        <from>$numberOfHotels + 1</from>
                        <to variable="numberOfHotels"/>
                     </copy>
                     <copy>
                        <from>true()</from>
                        <to variable="AddHotelOut" part="AddHotelResponse"/>
                     </copy>
                  </assign>
                  <reply name="ReplyAddHotel" partnerLink="PartnerLink1" operation="AddHotel" portType="ns1:TravelGoodPortType" variable="AddHotelOut"/>
               </sequence>
            </onMessage>
            <onMessage partnerLink="PartnerLink1" operation="CancelItinerary" portType="ns1:TravelGoodPortType" variable="CancelItineraryIn">
               <correlations>
                  <correlation set="ItineraryCorrelationSet" initiate="no"/>
               </correlations>
               <sequence name="Sequence12">
                  <assign name="Assign14">
                     <copy>
                        <from>'Itinerary has been cancelled.'</from>
                        <to variable="CancelItineraryOut" part="CancelItineraryResponse"/>
                     </copy>
                  </assign>
                  <reply name="ReplyCancelItinerary" partnerLink="PartnerLink1" operation="CancelItinerary" portType="ns1:TravelGoodPortType" variable="CancelItineraryOut"/>
                  <exit name="Exit1"/>
               </sequence>
            </onMessage>
         </pick>
      </while>
       <while name="Booked">
          <condition>not($ItineraryCancelled)</condition>
          <pick name="BookedPick">
             <onMessage partnerLink="PartnerLink1" operation="GetBookedItinerary" portType="ns1:TravelGoodPortType" variable="GetBookedItineraryIn">
                <correlations>
                   <correlation set="ItineraryCorrelationSet" initiate="no"/>
                </correlations>
                <sequence name="Sequence13">
                   <assign name="Assign15">
                      <copy>
                         <from variable="hotelBookingArray"/>
                         <to>$GetBookedItineraryOut.GetBookedItineraryResponse/ns1:HotelBookingArray</to>
                      </copy>
                      <copy>
                         <from variable="flightBookingArray"/>
                         <to>$GetBookedItineraryOut.GetBookedItineraryResponse/ns1:flightBookingArray</to>
                      </copy>
                   </assign>
                   <reply name="ReplyGetBookedItinerary" partnerLink="PartnerLink1" operation="GetBookedItinerary" portType="ns1:TravelGoodPortType" variable="GetBookedItineraryOut"/>
                </sequence>
             </onMessage>
             <onMessage partnerLink="PartnerLink1" operation="CancelBookedItinerary" portType="ns1:TravelGoodPortType" variable="CancelBookedItineraryIn">
                <correlations>
                   <correlation set="ItineraryCorrelationSet" initiate="no"/>
                </correlations>
                <sequence name="Sequence14">
                   <assign name="Assign19">
                      <copy>
                         <from>'Flights and hotels cancelled'</from>
                         <to variable="CancelMessage"/>
                      </copy>
                   </assign>
                   <forEach name="CancelEachFlight" parallel="no" counterName="CancelEachFlightCounter">
                      <startCounterValue>1</startCounterValue>
                      <finalCounterValue>$numberOfFlights</finalCounterValue>
                      <scope name="Scope5">
                         <variables>
                            <variable name="LameDuckCancelBookedFlightOut" messageType="ns3:cancelFlightResponse"/>
                            <variable name="LameDuckCancelBookedFlightIn" messageType="ns3:cancelFlightRequest"/>
                         </variables>
                         <faultHandlers>
                            <catchAll>
                               <assign name="Assign18">
                                  <copy>
                                     <from>'Could not be cancelled'</from>
                                     <to>$flightBookingArray/ns1:FlightBooking[$CancelEachFlightCounter]/bookingStatus
                                        <sxed:editor>
                                           <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$CancelEachFlightCounter]" source="to"/>
                                        </sxed:editor>
                                     </to>
                                  </copy>
                                  <copy>
                                     <from>'Some flights/hotels could not be cancelled.'</from>
                                     <to variable="CancelMessage"/>
                                  </copy>
                               </assign>
                            </catchAll>
                         </faultHandlers>
                         <sequence name="Sequence15">
                            <assign name="Assign16">
                               <copy>
                                  <from>$flightBookingArray/ns1:FlightBooking[$CancelEachFlightCounter]/bookingNumber
                                     <sxed:editor>
                                        <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$CancelEachFlightCounter]" source="from"/>
                                     </sxed:editor>
                                  </from>
                                  <to>$LameDuckCancelBookedFlightIn.input/bookingNumber</to>
                               </copy>
                               <copy>
                                  <from>$flightBookingArray/ns1:FlightBooking[$CancelEachFlightCounter]/ns1:Price
                                     <sxed:editor>
                                        <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$CancelEachFlightCounter]" source="from"/>
                                     </sxed:editor>
                                  </from>
                                  <to>$LameDuckCancelBookedFlightIn.input/price</to>
                               </copy>
                               <copy>
                                  <from>$CancelBookedItineraryIn.CancelBookedItineraryRequest/ns1:CreditCardInfo</from>
                                  <to>$LameDuckCancelBookedFlightIn.input/creditCardInfo</to>
                               </copy>
                            </assign>
                            <invoke name="LameDuckCancelBookedFlight" partnerLink="LameDuckPartnerLink" operation="cancelFlight" portType="ns3:lameduckPortType" inputVariable="LameDuckCancelBookedFlightIn" outputVariable="LameDuckCancelBookedFlightOut"/>
                            <assign name="Assign17">
                               <copy>
                                  <from>'Cancelled'</from>
                                  <to>$flightBookingArray/ns1:FlightBooking[$CancelEachFlightCounter]/bookingStatus
                                     <sxed:editor>
                                        <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$CancelEachFlightCounter]" source="to"/>
                                     </sxed:editor>
                                  </to>
                               </copy>
                            </assign>
                         </sequence>
                      </scope>
                   </forEach>
                   <forEach name="CancelEachHotel" parallel="no" counterName="CancelEachHotelCounter">
                      <startCounterValue>1</startCounterValue>
                      <finalCounterValue>$numberOfHotels</finalCounterValue>
                      <scope name="Scope6">
                         <variables>
                            <variable name="NiceViewCancelBookedHotelOut" xmlns:tns="http://niceview.ws" messageType="tns:cancelHotelResponse"/>
                            <variable name="NiceViewCancelBookedHotelIn" xmlns:tns="http://niceview.ws" messageType="tns:cancelHotelRequest"/>
                         </variables>
                         <faultHandlers>
                            <catchAll>
                               <assign name="Assign23">
                                  <copy>
                                     <from>'Could not be cancelled'</from>
                                     <to>$hotelBookingArray/ns1:HotelBooking[$CancelEachHotelCounter]/bookingStatus
                                        <sxed:editor>
                                           <sxed:predicate path="$hotelBookingArray/ns1:HotelBooking[$CancelEachHotelCounter]" source="to"/>
                                        </sxed:editor>
                                     </to>
                                  </copy>
                                  <copy>
                                     <from>'Some flights/hotels could not be cancelled.'</from>
                                     <to variable="CancelMessage"/>
                                  </copy>
                               </assign>
                            </catchAll>
                         </faultHandlers>
                         <sequence name="Sequence16">
                            <assign name="Assign21">
                               <copy>
                                  <from>$hotelBookingArray/ns1:HotelBooking[$CancelEachHotelCounter]/bookingNumber
                                     <sxed:editor>
                                        <sxed:predicate path="$hotelBookingArray/ns1:HotelBooking[$CancelEachHotelCounter]" source="from"/>
                                     </sxed:editor>
                                  </from>
                                  <to>$NiceViewCancelBookedHotelIn.input/book_num</to>
                               </copy>
                            </assign>
                            <invoke name="NiceViewCancelBookedHotel" partnerLink="NiceViewPartnerLink" operation="cancelHotel" xmlns:tns="http://niceview.ws" portType="tns:NiceViewWSDLPortType" inputVariable="NiceViewCancelBookedHotelIn" outputVariable="NiceViewCancelBookedHotelOut"/>
                            <assign name="Assign22">
                               <copy>
                                  <from>'Cancelled'</from>
                                  <to>$hotelBookingArray/ns1:HotelBooking[$CancelEachHotelCounter]/bookingStatus
                                     <sxed:editor>
                                        <sxed:predicate path="$hotelBookingArray/ns1:HotelBooking[$CancelEachHotelCounter]" source="to"/>
                                     </sxed:editor>
                                  </to>
                               </copy>
                            </assign>
                         </sequence>
                      </scope>
                   </forEach>
                   <assign name="Assign20">
                      <copy>
                         <from variable="CancelMessage"/>
                         <to variable="CancelBookedItineraryOut" part="CancelBookedItineraryResponse"/>
                      </copy>
                      <copy>
                         <from>true()</from>
                         <to variable="ItineraryCancelled"/>
                      </copy>
                   </assign>
                   <reply name="ReplyCancelBookedItinerary" partnerLink="PartnerLink1" operation="CancelBookedItinerary" portType="ns1:TravelGoodPortType" variable="CancelBookedItineraryOut"/>
                </sequence>
             </onMessage>
             <onAlarm>
                <until>$EarliestDate</until>
                <exit name="Exit2"/>
             </onAlarm>
          </pick>
       </while>
       <while name="Cancelled">
          <condition>true()</condition>
          <pick name="CancelledPick">
             <onMessage partnerLink="PartnerLink1" operation="GetCancelledItinerary" portType="ns1:TravelGoodPortType" variable="GetCancelledItineraryIn">
                <correlations>
                   <correlation set="ItineraryCorrelationSet" initiate="no"/>
                </correlations>
                <sequence name="Sequence17">
                   <assign name="Assign26">
                      <copy>
                         <from variable="hotelBookingArray"/>
                         <to>$GetCancelledItineraryOut.GetCancelledItineraryRequest/ns1:HotelBookingArray</to>
                      </copy>
                      <copy>
                         <from variable="flightBookingArray"/>
                         <to>$GetCancelledItineraryOut.GetCancelledItineraryRequest/ns1:flightBookingArray</to>
                      </copy>
                   </assign>
                   <reply name="ReplyGetCancelledItinerary" partnerLink="PartnerLink1" operation="GetCancelledItinerary" portType="ns1:TravelGoodPortType" variable="GetCancelledItineraryOut"/>
                </sequence>
             </onMessage>
             <onAlarm>
                <until>$EarliestDate</until>
                <exit name="Exit3"/>
             </onAlarm>
          </pick>
       </while>
    </sequence>
</process>
