<?xml version="1.0" encoding="UTF-8" ?>
<process
    name="travelGoodBPEL"
    targetNamespace="http://enterprise.netbeans.org/bpel/TravelGoodBPEL/travelGoodBPEL"
    xmlns:tns="http://enterprise.netbeans.org/bpel/TravelGoodBPEL/travelGoodBPEL"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor2"
    xmlns:sxat="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Attachment"
    xmlns:sxeh="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/ErrorHandling" xmlns:ns1="http://travelgood.ws" xmlns:ns2="http://lameducktypes" xmlns:ns3="http://lameduck.ws">
   <import namespace="http://enterprise.netbeans.org/bpel/lameduckServiceWrapper" location="lameduckServiceWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
   <import namespace="http://lameduck.ws" location="http://localhost:8080/LameDuck/lameduckService?wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
   <import namespace="http://travelgood.ws" location="TravelGood.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
   <import namespace="http://lameducktypes" location="http://localhost:8080/LameDuck/lameduckService?xsd=1" importType="http://www.w3.org/2001/XMLSchema"/>
   <partnerLinks>
       <partnerLink name="LameDuckPartnerLink" xmlns:tns="http://enterprise.netbeans.org/bpel/lameduckServiceWrapper" partnerLinkType="tns:lameduckLinkType" partnerRole="lameduckRole"/>
       <partnerLink name="PartnerLink1" xmlns:tns="http://travelgood.ws" partnerLinkType="tns:TravelGood" myRole="TravelGoodPortTypeRole"/>
   </partnerLinks>
   <variables>
      <variable name="BookingCounter" type="xs:int"/>
      <variable name="BookFlightFault" messageType="ns3:bookFlightFault"/>
      <variable name="GetItineraryOut" messageType="ns1:GetItineraryResponse"/>
      <variable name="GetItineraryIn" messageType="ns1:GetItineraryRequest"/>
      <variable name="numberOfFlights" type="xs:int"/>
      <variable name="AddFlightOut" messageType="ns1:AddFlightResponse"/>
      <variable name="AddFlightIn" messageType="ns1:AddFlightRequest"/>
      <variable name="flightBookingArray" element="ns1:flightBookingArray">
         <sxed:editor>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]" source="to"/>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$ForEach1Counter]" source="to"/>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$ForEach1Counter]" source="from"/>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$numberOfFlights]" source="from"/>
            <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$BookingCounter]" source="from"/>
         </sxed:editor>
      </variable>
      <variable name="Fault1FaultVar" messageType="ns1:BookItineraryFault"/>
      <variable name="BookItineraryOut" xmlns:tns="http://travelgood.ws" messageType="tns:BookItineraryResponse"/>
      <variable name="BookItineraryIn" xmlns:tns="http://travelgood.ws" messageType="tns:BookItineraryRequest"/>
      <variable name="GetFlightsOut" xmlns:tns="http://travelgood.ws" messageType="tns:GetFlightsResponse"/>
      <variable name="GetFlightsIn" xmlns:tns="http://travelgood.ws" messageType="tns:GetFlightsRequest"/>
      <variable name="CreateItineraryOut" xmlns:tns="http://travelgood.ws" messageType="tns:CreateItineraryResponse"/>
      <variable name="CreateItineraryIn" xmlns:tns="http://travelgood.ws" messageType="tns:CreateItineraryRequest"/>
      <variable name="LameDuckGetFlightsOut" xmlns:tns="http://lameduck.ws" messageType="tns:getFlightResponse"/>
      <variable name="LameDuckGetFlightsIn" xmlns:tns="http://lameduck.ws" messageType="tns:getFlightRequest"/>
      <variable name="PlanningDone" type="xs:boolean"/>
   </variables>
    <correlationSets>
        <correlationSet name="ItineraryCorrelationSet" properties="ns1:CustomerName ns1:ItineraryId"/>
    </correlationSets>
    <sequence>
      <receive name="ReceiveCreateItinerary" createInstance="yes" partnerLink="PartnerLink1" operation="CreateItinerary" xmlns:tns="http://travelgood.ws" portType="tns:TravelGoodPortType" variable="CreateItineraryIn">
          <correlations>
              <correlation set="ItineraryCorrelationSet" initiate="yes"/>
          </correlations>
      </receive>
      <assign name="Creating">
         <copy>
            <from>true()</from>
            <to variable="CreateItineraryOut" part="CreateItineraryResponse"/>
         </copy>
         <copy>
            <from>false()</from>
            <to variable="PlanningDone"/>
         </copy>
         <copy>
            <from>0</from>
            <to variable="numberOfFlights"/>
         </copy>
         <copy>
            <from>1</from>
            <to variable="BookingCounter"/>
         </copy>
      </assign>
      <reply name="ReplyCreateItinerary" partnerLink="PartnerLink1" operation="CreateItinerary" xmlns:tns="http://travelgood.ws" portType="tns:TravelGoodPortType" variable="CreateItineraryOut"/>
      <while name="Planning">
         <condition>not($PlanningDone)</condition>
         <pick name="PlanningPick">
            <onMessage partnerLink="PartnerLink1" operation="GetFlights" portType="tns:TravelGoodPortType" variable="GetFlightsIn" xmlns:tns="http://travelgood.ws">
               <correlations>
                  <correlation set="ItineraryCorrelationSet" initiate="no"/>
               </correlations>
               <sequence name="GettingFlights">
                  <assign name="TGtoLD">
                     <copy>
                        <from>$GetFlightsIn.GetFlightsRequest/ns2:request</from>
                        <to variable="LameDuckGetFlightsIn" part="input"/>
                     </copy>
                  </assign>
                  <invoke name="LameDuckGetFlights" partnerLink="LameDuckPartnerLink" operation="getFlights" xmlns:tns="http://lameduck.ws" portType="tns:lameduckPortType" inputVariable="LameDuckGetFlightsIn" outputVariable="LameDuckGetFlightsOut"/>
                  <assign name="LDtoTG">
                     <copy>
                        <from variable="LameDuckGetFlightsOut" part="output"/>
                        <to variable="GetFlightsOut" part="GetFlightsResponse"/>
                     </copy>
                  </assign>
                  <reply name="ReplyGetFlights" partnerLink="PartnerLink1" operation="GetFlights" portType="tns:TravelGoodPortType" variable="GetFlightsOut"/>
               </sequence>
            </onMessage>
            <onMessage partnerLink="PartnerLink1" operation="BookItinerary" portType="tns:TravelGoodPortType" variable="BookItineraryIn" xmlns:tns="http://travelgood.ws">
                <correlations>
                    <correlation set="ItineraryCorrelationSet" initiate="no"/>
                </correlations>
                <sequence name="BookingItinerary">
                   <scope name="Scope3">
                               <variables>
                                     <variable name="BookItineraryFault" messageType="ns1:BookItineraryFault"/>
                                  </variables>
				   <faultHandlers>
                                     <catch faultVariable="BookFlightFault" faultName="ns3:fault1" faultMessageType="ns3:bookFlightFault">
                                           <sequence name="Sequence5">
                                                 <compensateScope name="CompensateScope1" target="Scope1"/>
                                                    <assign name="Assign6">
                                                       <copy>
                                                             <from variable="flightBookingArray"/>
                                                                <to>$BookItineraryFault.BookItineraryFault/tns:flightBookingArray</to>
                                                          </copy>
                                                          <copy>
                                                             <from>$BookFlightFault.fault/message</from>
                                                                <to>$BookItineraryFault.BookItineraryFault/tns:Message</to>
                                                          </copy>
                                                    </assign>
                                                    <reply name="BookItineraryFaultReply" partnerLink="PartnerLink1" operation="BookItinerary" portType="tns:TravelGoodPortType" faultName="tns:fault1" variable="BookItineraryFault"/>
                                              </sequence>
                                        </catch>
                                        <!--<catchAll>
                               <sequence name="Sequence5">
                                  <compensate name="Compensate1"/>
                                  <assign name="Assign6">
                                     <copy>
                                        <from variable="flightBookingArray"/>
                                        <to>$BookItineraryFault.BookItineraryFault/tns:flightBookingArray</to>
                                     </copy>
                                     <copy>
                                        <from>'Booking failed.'</from>
                                        <to>$BookItineraryFault.BookItineraryFault/tns:Message</to>
                                     </copy>
                                  </assign>
                                  <reply name="BookItineraryFaultReply" partnerLink="PartnerLink1" operation="BookItinerary" portType="tns:TravelGoodPortType" faultName="tns:fault1" variable="BookItineraryFault"/>
                               </sequence>
                            </catchAll>-->
                                  </faultHandlers>
                      <forEach name="ForEach1" parallel="no" counterName="ForEach1Counter">
                         <startCounterValue>1</startCounterValue>
                            <finalCounterValue>$numberOfFlights</finalCounterValue>
                            <scope name="Scope1">
                               <variables>
                                     <!--<variable name="BookItineraryFault" messageType="ns1:BookItineraryFault"/>-->
                                        <variable name="LameDuckBookFlightOut" messageType="ns3:bookFlightResponse"/>
                                        <variable name="LameDuckBookFlightIn" messageType="ns3:bookFlightRequest"/>
                                  </variables>
                                  
                                  <scope name="Scope2">
                                     <variables>
                                           <variable name="LameDuckCancelFlightOut" messageType="ns3:cancelFlightResponse"/>
                                              <variable name="LameDuckCancelFlightIn" messageType="ns3:cancelFlightRequest"/>
                                        </variables>
                                        <compensationHandler>
                                           <sequence name="Sequence4">
                                                 <assign name="Assign5">
                                                       <copy>
                                                             <from>$flightBookingArray/tns:FlightBooking[$ForEach1Counter]/bookingNumber
                                           <sxed:editor>
                                                                         <sxed:predicate path="$flightBookingArray/tns:FlightBooking[$ForEach1Counter]" source="from"/>
                                                                      </sxed:editor>
                                                                </from>
                                                                <to>$LameDuckCancelFlightIn.input/bookingNumber</to>
                                                          </copy>
                                                          <copy>
                                                             <from>$flightBookingArray/tns:FlightBooking[$ForEach1Counter]/tns:Price
                                           <sxed:editor>
                                                                         <sxed:predicate path="$flightBookingArray/tns:FlightBooking[$ForEach1Counter]" source="from"/>
                                                                      </sxed:editor>
                                                                </from>
                                                                <to>$LameDuckCancelFlightIn.input/price</to>
                                                          </copy>
                                                          <copy>
                                                             <from>$BookItineraryIn.BookItineraryRequest/tns:CreditCardInfo</from>
                                                                <to>$LameDuckCancelFlightIn.input/creditCardInfo</to>
                                                          </copy>
                                                          <copy>
                                                             <from>'Cancelled'</from>
                                                                <to>$flightBookingArray/tns:FlightBooking[$ForEach1Counter]/bookingStatus
                                           <sxed:editor>
                                                                         <sxed:predicate path="$flightBookingArray/tns:FlightBooking[$ForEach1Counter]" source="to"/>
                                                                      </sxed:editor>
                                                                </to>
                                                          </copy>
                                                    </assign>
                                                    <invoke name="Invoke1" partnerLink="LameDuckPartnerLink" operation="cancelFlight" portType="ns3:lameduckPortType" inputVariable="LameDuckCancelFlightIn" outputVariable="LameDuckCancelFlightOut"/>
                                              </sequence>
                                        </compensationHandler>
                                        <sequence name="Sequence3">
                                           <assign name="Assign7">
                                                 <copy>
                                                       <from>$BookItineraryIn.BookItineraryRequest/tns:CreditCardInfo</from>
                                                          <to>$LameDuckBookFlightIn.input/creditCardInfo</to>
                                                    </copy>
                                                    <copy>
                                                       <from>$flightBookingArray/tns:FlightBooking[$ForEach1Counter]/bookingNumber
                                                                <sxed:editor>
                                                                   <sxed:predicate path="$flightBookingArray/tns:FlightBooking[$ForEach1Counter]" source="from"/>
                                                                </sxed:editor>
                                                          </from>
                                                          <to>$LameDuckBookFlightIn.input/bookingNumber</to>
                                                    </copy>
                                              </assign>
                                              <invoke name="LameDuckBookFlight" partnerLink="LameDuckPartnerLink" operation="bookFlight" portType="ns3:lameduckPortType" inputVariable="LameDuckBookFlightIn" outputVariable="LameDuckBookFlightOut"/>
                                              <assign name="Assign4">
                                                 <copy>
                                                       <from>'Confirmed'</from>
                                                          <to>$flightBookingArray/tns:FlightBooking[$ForEach1Counter]/bookingStatus
                                                    <sxed:editor>
                                                                   <sxed:predicate path="$flightBookingArray/tns:FlightBooking[$ForEach1Counter]" source="to"/>
                                                                </sxed:editor>
                                                          </to>
                                                    </copy>
                                              </assign>
                                        </sequence>
                                  </scope>
                            </scope>
                      </forEach>
                   </scope>
                   <assign name="Assign1">
                     <copy>
                           <from>true()</from>
                              <to variable="PlanningDone"/>
                        </copy>
                     <copy>
                        <from>true()</from>
                        <to variable="BookItineraryOut" part="BookItineraryResponse"/>
                     </copy>
                  </assign>
                  <reply name="ReplyBookItinerary" partnerLink="PartnerLink1" operation="BookItinerary" portType="tns:TravelGoodPortType" variable="BookItineraryOut"/>
               </sequence>
            </onMessage>
            <onMessage partnerLink="PartnerLink1" operation="AddFlight" portType="ns1:TravelGoodPortType" variable="AddFlightIn">
               <correlations>
                  <correlation set="ItineraryCorrelationSet" initiate="no"/>
               </correlations>
               <sequence name="Sequence1">
                  <assign name="Assign2">
                     <copy>
                        <from>$AddFlightIn.AddFlightRequest/ns1:BookingNumber</from>
                        <to>$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]/bookingNumber
                           <sxed:editor>
                              <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]" source="to"/>
                           </sxed:editor>
                        </to>
                     </copy>
                     <copy>
                        <from>'Unconfirmed'</from>
                        <to>$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]/bookingStatus
                           <sxed:editor>
                              <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]" source="to"/>
                           </sxed:editor>
                        </to>
                     </copy>
                     <copy>
                        <from>true()</from>
                        <to variable="AddFlightOut" part="AddFlightResponse"/>
                     </copy>
                     <copy>
                        <from>$AddFlightIn.AddFlightRequest/ns1:Price</from>
                        <to>$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]/ns1:Price
                           <sxed:editor>
                              <sxed:predicate path="$flightBookingArray/ns1:FlightBooking[$numberOfFlights + 1]" source="to"/>
                           </sxed:editor>
                        </to>
                     </copy>
                  </assign>
                  <assign name="Assign8">
                     <copy>
                        <from>$numberOfFlights + 1</from>
                        <to variable="numberOfFlights"/>
                     </copy>
                  </assign>
                  <reply name="Reply1" partnerLink="PartnerLink1" operation="AddFlight" portType="ns1:TravelGoodPortType" variable="AddFlightOut"/>
               </sequence>
            </onMessage>
            <onMessage partnerLink="PartnerLink1" operation="GetItinerary" portType="ns1:TravelGoodPortType" variable="GetItineraryIn">
               <correlations>
                  <correlation set="ItineraryCorrelationSet" initiate="no"/>
               </correlations>
               <sequence name="Sequence2">
                  <assign name="Assign3">
                     <copy>
                        <from variable="flightBookingArray"/>
                        <to variable="GetItineraryOut" part="GetItineraryResponse"/>
                     </copy>
                  </assign>
                  <reply name="Reply2" partnerLink="PartnerLink1" operation="GetItinerary" portType="ns1:TravelGoodPortType" variable="GetItineraryOut"/>
               </sequence>
            </onMessage>
         </pick>
      </while>
   </sequence>
</process>
